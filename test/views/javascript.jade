extends layout

block navbar
  - var section = 'javascript'
  include navbar

block content
  header.jumbotron.subhead
    h1 JavaScript plugins
    p.lead Bring the components to life with powerful plugins.
    .subnav
      ul.nav.nav-pills
        li
          a(href="#toc") All plugins
        li
          a(href="#modal") Modal

  section#toc
    .page-header
      h1 JavaScript plugins
        small A bunch of javascript plugins to get you started
    
    .row
      .span3
        label 
          h3
            a(href="#modals") Modals
          :markdown
            A streamlined, but flexible, take on the traditional javascript modal plugin 
            with only the minimum required functionality and smart defaults.
  section#modal
    .page-header
      h1 Modal
        bootstrap-modal.js

    .row
      .span3
        h3 About modals
        p 
          :markdown
            A streamlined, but flexible, take on the traditional javascript modal plugin 
            with only the minimum required functionality and smart defaults.
          a.btn(href="#") Download
                
      .span9
        h2 Static example
        p Below is a statically rendered modal.
        
        .well(style="background-color: #888; border: none;")
          .modal(style="position: relative; top: auto; left: auto; margin: 0 auto; z-index: 1")
            .modal-header
              a.close.js-dismiss(href="#") x
              h3 Modal header
            .modal-body
              p One fine body…
            .modal-footer
              a.btn.primary(href="#") Save changes
              a.btn(href="#") Close

        h2 Live demo
        p Toggle a modal via javascript by clicking the button below. It will slide down and fade in from the top of the page.
        // Sample modal content
        #my-modal.modal.hide.fade
          .modal-header
            a.close(data-dismiss="modal") &times;
            h3 Modal Heading
          .modal-body
            h4 Text in a modal
            p Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.
            h4 Popover in a modal
            p
              | This 
              a.btn.popover-test(href="#", data-content="And here's some amazing content. It's very engaging. Right?") button
              |  should trigger a popover on hover.
            h4 Tooltips in a modal
            p
              a.tooltip-test(href="#", data-original-title="Tooltip") This link
              |  and 
              a.tooltip-test(href="#", data-original-title="Tooltip") that link
              |  should have tooltips on hover.

          .modal-footer
            .btn.btn-primary(href="#") Save changes
            .btn(href="#", data-dismiss="modal") Close
        a.btn.btn-primary.btn-large(data-toggle="modal", href="#my-modal") Launch demo modal

        hr
        h2 Using modal
        p Call the modal via javascript:
        pre.prettyprint.linenums.
          $('#my-modal').modal(options);
        h3 Options
        table.table.table-bordered.table-striped
          thead
            tr
              th Name
              th Type
              th Default
              th Description
          tbody
            tr
              td backdrop
              td boolean
              td true
              td Includes a modal-backdrop element
            tr
              td keyboard
              td boolean
              td true
              td Closes the modal when escape key is pressed

        h3 Markup
        :markdown
          Additionally, you can activate modals on your page without having to write a single line of javascript. 
          Just set `data-toggle="modal"` on a controller element with a `data-target="#foo"` or `href="#foo"` which 
          corresponds to a modal element id, and when clicked, it will launch your modal.

          Also, to add options to your modal instance, just include them as additional data attributes on 
          either the control element or the modal markup itself.
        pre.prettyprint.linenums.
          <a class="btn" data-toggle="modal" href="#my-modal" >Launch Modal</a>
        pre.prettyprint.linenums.
          <div class="modal">
            <div class="modal-header">
              <a class="close" data-dismiss="modal">×</a>
              <h3>Modal header</h3>
            </div>
            <div class="modal-body">
              <p>One fine body…</p>
            </div>
            <div class="modal-footer">
              <a href="#" class="btn btn-primary">Save changes</a>
              <a href="#" class="btn">Close</a>
            </div>
          </div>
        .alert.alert-info
          | <strong>Heads up!</strong> If you want your modal to animate in and out, just add a 
          | <code>.fade</code> class to the <code>.modal</code> element (refer to the demo to see this in action) and include 
          | bootstrap-transition.js.
        h3 Methods
        h4 .modal(options)
        :markdown
          Activates your content as a modal. Accepts an optional options `object`.
        pre.prettyprint.linenums.
          $('#my-modal').modal({
            keyboard: false
          });
        h4 .modal('toggle')
        :markdown
          Manually toggles a modal.
        pre.prettyprint.linenums.
          $('#my-modal').modal('toggle');
        h4 .modal('show')
        :markdown
          Manually opens a modal.
        pre.prettyprint.linenums.
          $('#my-modal').modal('show');
        h4 .modal('hide')
        :markdown
          Manually hides a modal.
        pre.prettyprint.linenums.
          $('#my-modal').modal('hide');
        h3 Events
        :markdown
          Bootstrap's modal class exposes a few events for hooking into modal functionality.
        table.table.table-bordered.table-striped
          thead
            tr
              th Event
              th Description
          tbody
            tr
              td show
              td This event fires immediately when the <code>show</code> instance method is called.
            tr
              td shown
              td This event is fired when the modal has been made visible to the user (will wait for css transitions to complete).
            tr
              td hide
              td This event is fired immediately when the <code>hide</code> instance method has been called.
            tr
              td hidden
              td This event is fired when the modal has finished being hidden from the user (will wait for css transitions to complete).
        pre.prettyprint.linenums.
          $('#my-modal').on('hidden', function () {
            // do something…
          });